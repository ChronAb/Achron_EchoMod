// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.ais
#include common/include/human_idle.ais


object buddy=0;
int uEnergy = unit->Energy;

/*if (smart && uEnergy > 0) {
	int hash = 0;
    int distance=0; int otherdistance=0;
    int HEAL = $REPAIR_UNIT_OBJ;
    int UPPER = 9;;  //upper bound for the class this unit can heal
    int LOWER = 1;  //lower bound
    #include common/include/unit_heal_response.ais
}*/

PERFORM RAND;
if (perf_ret > 4096)  { 
	$SET_AP
	PERFORM NOTHING;  
}

//First heal self
if(unit->HP < unit.MaxHP-2) buddy = unit;

//heal other friendlies
if (buddy==0){
    query_vis_distance = 24;
    int q_action = 0;
    buddy =  QUERY UNIT [unit] MIN [ unit <_> query*(query->HP)**2 ]
        WHERE [query->IsAlly==1 && !(query->IsStasis) &&
            query->HP < (query.MaxHP-2) && query->HP > 0 &&
            query->ZPosition == 0 && (q_action=query->Action)!=$ACTION_ROTATE &&
            q_action!=$ACTION_MOVE && q_action!=$ACTION_MOVE_SLOW];
						//non-moving ground units only
    query_vis_distance = -1; //reset query vis range
}
       

if (buddy) {
    PERFORM SET_ADDITIONAL_PARAMS 0;
    PERFORM SET_PARAM buddy; //set unit->ObjectiveParameters to the buddy
    PERFORM SET_OBJECTIVE $REPAIR_UNIT_OBJ;
    PERFORM NOTHING;
}


#include common/include/unit_autopilot.ais

$SET_AP
