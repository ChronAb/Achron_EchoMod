// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih
#include human/human_building_idle.ais


/*
Echo Mod Operation:
State 1 - Idle Cporter (!myStatus[$CAP_BIT_2])
    1. Look for units wanting to Cport
    2. If it finds one -> it spins up (sets STATUS_CAPABILITY_2 -> U_STATUS 32)
State 2 - Activated Cporter (myStatus[$CAP_BIT_2], no Commander)
    1. Look for the beefiest unit wanting to Cport
    2. If nobody wants to Cport -> clear commander and spin down
    3. Otherwise, move the Cporter's commander-pointer to the beefy Cportee.
        This gives it permission to Cport.
State 3 - Engaged Cporter (myStatus[$CAP_BIT_2], Commander)
    1. Check if commander is still in range and still wants to Cport.
    2. If not, clear commander
*/


int myStatus = unit->Status;
object chronoportee = unit->Commander;
object cportObj = 0;
query_vis_distance = 26; // Cport radius


// State 1 - Idle Cporter looks for units wanting to Cport
//********************************************************************
if (!myStatus[$CAP_BIT_2]) {
    PERFORM RAND;  //not spun up, so don't look for units 7/8 times
    if (perf_ret[0,3]<1) {
        //was moving, so plant here, legacy code. shouldn't be executed
        if (myStatus[$CAP_BIT_1]) PERFORM SET_OBJECTIVE $OBJ_BLDG_PLANT;
        PERFORM NOTHING;
    }
    
    //find any unit that wants to Cport
    target = QUERY UNIT [unit] MAX [unit->HP] WHERE [ (cportObj = query->Objective) 
                && cportObj == $OBJECTIVE_CHRONOPORT && query.Rank > $BUILDINGS_RANK
                && query->IsAlly==1 && !query->IsStasis && !query->IsStop ];
                   
    //valid Cport requestor found -> make gate spin up
    if (target->IsAlive==1) PERFORM $ACTION_SPINUP; 
    PERFORM NOTHING;
}


// State 2 - Activated Cporter moves commander arrow
//********************************************************************
if (myStatus[$CAP_BIT_2] && chronoportee==0) {
    
    //find beefiest unit that wants to Cport
    target = QUERY UNIT [unit] MAX [16*query->HP - unit<=>query] 
            WHERE [ (cportObj = query->Objective) 
                && cportObj == $OBJECTIVE_CHRONOPORT && query.Rank > $BUILDINGS_RANK
                && query->IsAlly==1 && !query->IsStasis && !query->IsStop ];
                
    if (target==0) { //no takers
        PERFORM $ACTION_SPINDOWN; 
        PERFORM NOTHING;
    }    
    
    if (target->IsAlive==1) { //permission to Cport
        //say "tryin to port ", target, " status ", myStatus;
        PERFORM $ACTION_TIMEPORT target; 
        PERFORM NOTHING;
    }
}


// State 3 - Engaged Cporter monitors its Cportee
//********************************************************************
if (myStatus[$CAP_BIT_2] && chronoportee>0) {
    target = chronoportee;
    
    //Cportee is dead, out of range, or not wanting to Cport anymore
    if (chronoportee->IsAlive==0 || chronoportee->Objective!=$OBJECTIVE_CHRONOPORT
            || unit<_>chronoportee>676) {
        PERFORM $ACTION_POSTCPORT 0;
    }
}