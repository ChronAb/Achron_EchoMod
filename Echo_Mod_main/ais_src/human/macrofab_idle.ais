// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include human/human_building_idle.ais

PERFORM GET_CUR_TIME;
int curtime = perf_ret;

// Autopilot: research Aerospace
//  Build MARs with LC and Frigates + MFBs with QP
if (player->IsComputerPlayer && player->CustomControls==0) {
    int advancements = player->Advancements;
    if (unit->Age%6480==4860) {
        if (!advancements[$HUMAN_ADV_WEAPONS]){
            PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE5;
            PERFORM NOTHING;
        }
    }
    if (unit->HP > 1160 && player->$ReserveSoldiers>0) {
        if (unit->Age%180==unit%60 && player->$LCrystals > 800) {
            PERFORM SET_OBJECTIVE $OBJ_BLDG_MAR;
            PERFORM NOTHING;
        }
        if (unit->Age%180==60+unit%60 && player->$QPlasma > 1800) {
            PERFORM SET_OBJECTIVE $OBJ_BLDG_FRIGATE;
            PERFORM NOTHING;
        }
        if (unit->Age%180==120+unit%60 && player->$QPlasma > 1800) {
            PERFORM SET_OBJECTIVE $OBJ_BLDG_MFB;
            PERFORM NOTHING;
        }
    }
}

PERFORM RAND;
if (perf_ret < 1024) {
	if (ap[$OBJ_BLDG_DEPLOYBIT] || (unit->NextCarriedUnit)->IsAlive==1) {  //couldn't deploy unit, so retry occasionally
        PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
		$SET_AP
        PERFORM NOTHING; 
    }
}
if (ap[$OBJ_BLDG_CONTINUE_DEPLOYBIT]) { 
    $SAY_INTERRUPT
    PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
	$SET_AP
    PERFORM NOTHING; 
}

/*look for cruiser to reload that wants to be reloaded
PERFORM RAND;
if (perf_ret < 4096 && (player->Advancements[$HUMAN_ADV_EXTRAS]))  { 
  if (player->$LCrystals >= $NUKE_LC && player->$QPlasma >= $NUKE_QP) {
	  object cruiser =  QUERY UNIT [unit] MIN [ unit <=> query ] 
						WHERE [query->Class == $CRUISER_CLASS && query->Objective==$OBJECTIVE_RELOAD && query->IsAlly && query->Ammo == 0 ];

	  if (cruiser->IsAlive==1) {  
		PERFORM SET_OBJECTIVE $OBJ_BLDG_EQUIP; 
	 }
  }
}*/

#include common/include/unit_autopilot_building.ais

$SET_AP
