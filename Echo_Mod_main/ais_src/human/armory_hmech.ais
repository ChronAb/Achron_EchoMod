// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih

//this check is run while this upgrade is happening (the upgrade actions allow script to run)
//guarantees that the concurrency bit for this upgrade is set
int unitAction = unit->Action;
if(unitAction >= $ACTION_RESEARCH_U1 && unitAction<=$ACTION_RESEARCH_U5) { 

	//if (unitAction==$ACTION_RESEARCH_U1 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE1; PERFORM NOTHING; }
	if (unitAction==$ACTION_RESEARCH_U2 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE2; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U3) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE3; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U4 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE4; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U5 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE5; PERFORM NOTHING; }

	
	int cc = player->CustomControls;
	if (!cc[$HUMAN_ADV_HEAVY]) {
		cc[$HUMAN_ADV_HEAVY] = 1;
		PERFORM SET_PLAYER_CUSTOM_CONTROLS cc;
	}
	
    PERFORM NOTHING; 
}

//do not allow this script to continue if the concurrency bit is set for this upgrade
if (player->CustomControls[$HUMAN_ADV_HEAVY]) { PERFORM SET_OBJECTIVE 0; PERFORM NOTHING; }
//don't allow script to continue if this has already been upgraded
if (player->Advancements[$HUMAN_ADV_HEAVY]) { PERFORM SET_OBJECTIVE 0; PERFORM NOTHING; }

int ua = unit->Action;
int interrupt = 0;
if (ua == $ACTION_REL_SOP || ua==$ACTION_REL_MAR) {
	interrupt = 1;
}

if (player->$LCrystals >= $ADV1_LC && player->$QPlasma >= $ADV1_QP) {
	if (interrupt) { PERFORM $ACTION_INTERRUPT; PERFORM NOTHING;}
    $SAY_RESEARCH_HMECH
    PERFORM $ACTION_RESEARCH_U1 0;
    if (perf_ret==0) { PERFORM SET_OBJECTIVE 0; }
    PERFORM NOTHING;
}
else {
    $SAY_RESOURCES
    if (!interrupt) { PERFORM $ACTION_ERROR1; }
    PERFORM SET_OBJECTIVE 0;
    PERFORM NOTHING;
}


