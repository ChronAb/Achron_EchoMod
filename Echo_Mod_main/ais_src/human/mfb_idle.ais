// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.ais
#include common/include/human_idle.ais

PERFORM RAND; 
if (perf_ret > 4096) { 
    $SET_AP
    PERFORM NOTHING; 
}

object buddy = 0;

// 1. Heal yourself
if ( unit->HP < unit.MaxHP && !(unit->IsStasis)) { buddy = unit; }

// 2. Heal allies
if (!buddy) buddy =  QUERY UNIT [unit] MIN [ query->HP ] WHERE 
        [ query->IsAlly==1  && !(query->IsStasis) &&
        (query->HP <= (query.MaxHP-2)  && query.Rank >= $RP_RANK )  ];  

// 3. Fix an ally that's either commjammed or stopped 
if (!buddy) {
	int qstatus = 0;
	buddy =  QUERY UNIT [unit] MIN [ unit <=> query ] WHERE [query->IsAlly==1 && 
				( ((qstatus=query->Status)&$FROZEN_COMMJAM ) && !qstatus[$TSS_BIT] )  ];
}
    
if (buddy) { 
//found a nearby unit that needs help
	int buddyStatus = buddy->Status;
	if (!buddyStatus[$TSS_BIT]) {
        
        // Repair
        if (buddy->HP < buddy.MaxHP ) {
            target = buddy;
			PERFORM $ACTION_REPAIR target; 
			PERFORM NOTHING;
        }

        // Recover
		if (buddyStatus & $FROZEN_COMMJAM) {
			PERFORM SET_ADDITIONAL_PARAMS 0;
			PERFORM SET_ADDITIONAL_PARAMS2 0;
			PERFORM SET_PARAM buddy;  //set unit->ObjectiveParameters to the buddy
			PERFORM SET_OBJECTIVE $RECOVER_UNIT_OBJ;  //20 is recover unit
			PERFORM NOTHING;		
		}
	}
}


#include common/include/unit_autopilot.ais

$SET_AP
