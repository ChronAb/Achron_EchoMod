// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include human/human_building_idle.ais

/*
Echo Mod Operation:
State 1 - Idle Teleporter (!myStatus[$CAP_BIT_2])
    1. Look for units wanting to teleport
    2. If it finds one -> it spins up (sets STATUS_CAPABILITY_2 -> U_STATUS 32)
State 2 - Activated Teleporter (myStatus[$CAP_BIT_2], no Commander)
    1. Look for the beefiest unit wanting to teleport
    2. If nobody wants to teleport -> clear commander and spin down
    3. Otherwise, move the teleporter's commander-pointer to the beefy teleportee.
        This gives it permission to teleport.
State 3 - Engaged Teleporter (myStatus[$CAP_BIT_2], Commander)
    1. Check if commander is still in range and still wants to teleport.
    2. If not, clear commander
*/


int myStatus = unit->Status;
object teleportee = unit->Commander;
object tportObj = 0;
query_vis_distance = 26; // teleport radius


// State 1 - Idle Teleporter looks for units wanting to teleport
//********************************************************************
if (!myStatus[$CAP_BIT_2]) {
    PERFORM RAND;  //not spun up, so don't look for units 7/8 times
    if (perf_ret[0,3]<1) {
        //was moving, so plant here, legacy code. shouldn't be executed
        if (myStatus[$CAP_BIT_1]) PERFORM SET_OBJECTIVE $OBJ_BLDG_PLANT;
        PERFORM NOTHING;
    }
    
    //find any unit that wants to teleport
    target = QUERY UNIT [unit] MAX [unit->HP] WHERE [ (tportObj = query->Objective) 
                && tportObj == $OBJECTIVE_SKIP
                && query->IsAlly==1 && !query->IsStasis && !query->IsStop ];
                   
    //valid teleport requestor found -> make gate spin up
    if (target->IsAlive==1) PERFORM $ACTION_SPINUP; 
    PERFORM NOTHING;
}


// State 2 - Activated Teleporter moves commander arrow
//********************************************************************
if (myStatus[$CAP_BIT_2] && teleportee==0) {
    
    //find beefiest unit that wants to teleport
    target = QUERY UNIT [unit] MAX [16*query->HP - unit<=>query] 
            WHERE [ (tportObj = query->Objective) 
                && tportObj == $OBJECTIVE_SKIP
                && query->IsAlly==1 && !query->IsStasis && !query->IsStop ];
                
    if (target==0) { //no takers
        PERFORM $ACTION_SPINDOWN; 
        PERFORM NOTHING;
    }    
    
    if (target->IsAlive==1) { //permission to teleport
        //say "tryin to port ", target, " status ", myStatus;
        PERFORM $ACTION_TELEPORT target; 
        PERFORM NOTHING;
    }
}


// State 3 - Engaged Teleporter monitors its teleportee
//********************************************************************
if (myStatus[$CAP_BIT_2] && teleportee>0) {
    target = teleportee;
    
    //teleportee is dead, out of range, or not wanting to teleport anymore
    if (teleportee->IsAlive==0 || teleportee->Objective!=$OBJECTIVE_SKIP
            || unit<_>teleportee>676) {
        PERFORM $ACTION_POSTTELEPORT 0;
    }
}