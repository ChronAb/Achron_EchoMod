// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih

object helper = player->CustomField5; //foundation build request lookup
if (helper != 0) {
    if (|/(unit <_> helper->ObjectiveParameters) < 10 ) { //building too close to request build location
		int flags = $FLAGS;
		flags[$FOUNDATION_FAIL_BIT] = 1;
		PERFORM SET_PLAYER_CUSTOM_FIELD_3 flags;
    }    
}

helper = QUERY UNIT [unit] MAX [ unit <=> query ]
                    WHERE [ query->IsAlly == 1 && (query->Class == $VIR_SHIN_CLASS )&& (query->Status[$CAP_BIT_3])];
if (helper!=0) {
    $SAY_NEARBY
    PERFORM $ACTION_SET_BIT helper;
    PERFORM NOTHING;
}

target = unit->ObjectiveParameters;

if (target->IsStasis == 1) {
    if (target->IsVisible && unit->Energy >= 100 ) {
        PERFORM SET_OBJECTIVE $OBJ_BLDG_BREAKTSS; // breaktss objective
        PERFORM NOTHING;
    }
    if ($SMART_IDLE) {
        int customField2 = player->CustomField2;
		object tss = customField2[0,16]; //$CUSTOMFIELD_TSS
		object lookup = customField2[16,16]; //$CUSTOMFIELD_LOOKUP
        object u = 0;
		int flags = 0;
    	#include common/include/unit_tss_request.ais
    }
}


PERFORM GET_CLOSEST_TARGET_POSITION_WITHIN_RANGE $ACTION_ATTACK;
int position =  perf_ret; 
if (position!=-1 && position!=$INVALID_POSITION) { 
    //check if close to target, ATTACK, else move , PERFORM NOTHING
    if (!(target->IsStasis)) {
        object enemy = target;
		target = position;
		PERFORM IS_POSITION_WITHIN_ACTION_ANGLE $ACTION_ATTACK;
		if (perf_ret>0) { //target is attackable in this direction
			target = enemy;

			int targetOnGround = target->IsTerrainGround;

			target_is_position = 1;
			target = position;
			if (targetOnGround) { PERFORM $ACTION_ATTACK position; }
			else { PERFORM $ACTION_ATTACK_W2 position; }		//it actually usse w2 as w1
            PERFORM NOTHING;
        }
        else {
            PERFORM $ACTION_ROTATE enemy->BestAttackDirection;
            PERFORM NOTHING;
        }
    }
    else {
        PERFORM SET_OBJECTIVE 0; 
        PERFORM NOTHING;
    }
}

PERFORM SET_OBJECTIVE 0;


