// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih

int ap=0;
int skip = 0;

#include common/include/vecgir_building_idle.ais

PERFORM GET_CUR_TIME;
int curtime = perf_ret;
if (curtime % 64 == 0 && player->$Power>=0) { //repair every ~3.5 seconds
	int qc = 0;
	target =  QUERY UNIT [unit] MAX [ unit <=> query ] WHERE [ query->IsAlly==1 && query.Rank >=$BUILDINGS_RANK && query->HP < query.MaxHP && !(query->IsStasis)];
	if (target->IsAlive==1) {
		PERFORM $ACTION_REPAIR target;
		PERFORM NOTHING;
	} 
	//repair buildings only if no units are found
	target =  QUERY UNIT [unit] MAX [ unit <=> query ] WHERE [ query->IsAlly==1 && query.Rank >= $RP_RANK && query->HP < query.MaxHP && !(query->IsStasis)];
	if (target->IsAlive==1) {
		PERFORM $ACTION_REPAIR target;
		PERFORM NOTHING;
	}	
	
}



PERFORM RAND;
if (perf_ret < 8192) { // 0-32k
   target = QUERY UNIT [unit] MAX [ unit <=> query ]
                        WHERE [ query->IsAlly == 1 && query.Rank == $S_VIR_RANK && (query->Status[$CAP_BIT_3])];
    if (target!=0) {
        $SAY_NEARBY
        PERFORM $ACTION_SET_BIT target;
        PERFORM NOTHING;
    }        
} 


if (curtime%16==0 && player->Advancements[$VECGIR_ADV_AUTODEFENCE]) {

	PERFORM GET_MAX_ACTION_RANGE_RADIUS $ACTION_ATTACK;
	query_vis_distance = perf_ret;
		
	target = QUERY UNIT [unit] MIN [ unit <=> query ] WHERE [!(query->IsAlly) && !(query->IsStasis) && query.MaxHP > 0];
	PERFORM GET_CLOSEST_TARGET_POSITION_WITHIN_RANGE $ACTION_ATTACK;
	int position =  perf_ret; 
	if (position!=-1 && position!=$INVALID_POSITION) { 
		target_is_position = 1;
		target = position;
		PERFORM $ACTION_ATTACK position;
		PERFORM NOTHING;
	}
}
