// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih


int ap=0;
int skip = 0;
//check for an adjacent depot and set its Annex-bit to allow the depot to make vehicles
PERFORM GET_CUR_TIME;
if (perf_ret%$DEPOT_CHECK==0) { //run the check for depot that cleared it's annex ping bit
	while(1) { 
		target = QUERY UNIT [unit] MIN [unit<_>query] WHERE [query->IsAlly==1 && query->Class==$DEPOT_CLASS &&
																 query<_>unit <= 144 &&!(query->Status[$CAP_BIT_3]) ]; 
																													 
		//annex sets the depot's cap_bit_1, allowing it to create vehicles directly
		if (target->IsAlive==1) {
			PERFORM $ACTION_SET_DEPOT_BIT;
		} else { break; }
	}
}

if (unit->Action==$ACTION_ATTACK) { PERFORM NOTHING; }

PERFORM RAND;
if (perf_ret > 16192) { // 0-32k
    #include common/include/vecgir_building_idle.ais
    if (ap[$OBJ_BLDG_DEPLOYBIT] || (unit->NextCarriedUnit)->IsAlive==1 ) {  //couldn't deploy unit, so retry occasionally
        PERFORM RAND;
        if (perf_ret < 1024) {
            PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
            PERFORM NOTHING; 
        }
    }
    if (ap[$OBJ_BLDG_CONTINUE_DEPLOYBIT]) { 
        $SAY_INTERRUPT
        PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
        PERFORM NOTHING; 
    }
    skip = 1;
}

target = 0;
target = QUERY UNIT [unit] MAX [ unit <=> query ]
                    WHERE [ query->IsAlly == 1 && (query.Rank == $S_VIR_RANK ) && (query->Status[$CAP_BIT_3])];
if (target != 0 ) {
    $SAY_NEARBY
    PERFORM $ACTION_SET_BIT target;
}        

if (!skip) {  
    #include common/include/vecgir_building_idle.ais    
    if (ap[$OBJ_BLDG_DEPLOYBIT] ) {  //couldn't deploy unit, so retry occasionally
        PERFORM RAND;
        if (perf_ret < 1024) {
            PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
            PERFORM NOTHING; 
        }
    }
    if (ap[$OBJ_BLDG_CONTINUE_DEPLOYBIT]) { 
        $SAY_INTERRUPT
        PERFORM SET_OBJECTIVE $OBJ_BLDG_DEPLOY; 
        PERFORM NOTHING; 
    }
 }
    
    
PERFORM RAND;
if (perf_ret < 8192)     {
    if (player->Advancements[$VECGIR_ADV_AUTODEFENCE]) {
	
		PERFORM GET_MAX_ACTION_RANGE_RADIUS $ACTION_ATTACK;
		query_vis_distance = perf_ret;
	
		target = QUERY UNIT [unit] MIN [ unit <=> query ] WHERE [!(query->IsAlly) && !(query->IsStasis) && query.MaxHP > 0];
		PERFORM GET_CLOSEST_TARGET_POSITION_WITHIN_RANGE $ACTION_ATTACK;
		int position =  perf_ret;
		if (position!=-1 && position!=$INVALID_POSITION) { 
			target_is_position = 1;
			target = position;
			PERFORM $ACTION_ATTACK position;
			PERFORM NOTHING;
		}
	}    
 }