// Copyright (C) 2002-2011 Hazardous Software Inc.  See EULA for license information.

#include common/include/unit_common_header.aih

//this check is run while this upgrade is happening (the upgrade actions allow script to run)
//guarantees that the concurrency bit for this upgrade is set
int unitAction = unit->Action;
if(unitAction >= $ACTION_RESEARCH_U1 && unitAction<=$ACTION_RESEARCH_U5) { 
	if (unitAction==$ACTION_RESEARCH_U1 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE1; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U2 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE2; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U3 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE3; PERFORM NOTHING; }
	//else if (unitAction==$ACTION_RESEARCH_U4 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE4; PERFORM NOTHING; }
	else if (unitAction==$ACTION_RESEARCH_U5 ) { PERFORM SET_OBJECTIVE $OBJ_BLDG_UPGRADE5; PERFORM NOTHING; }
	
	int cc = player->CustomControls;
	if (!cc[$GREKIM_ADV_GATE]) {
		cc[$GREKIM_ADV_GATE] = 1;
		PERFORM SET_PLAYER_CUSTOM_CONTROLS cc;
	}
    PERFORM NOTHING; 
}

//must have adv buildings upgraded first
if (!(player->Advancements[$GREKIM_ADV_AUTODEFENCE])) { PERFORM SET_OBJECTIVE 0; PERFORM NOTHING; }

//do not allow this script to continue if the concurrency bit is set for this upgrade
if (player->CustomControls[$GREKIM_ADV_GATE]) { PERFORM SET_OBJECTIVE 0; PERFORM NOTHING; }


if ( player->$LCrystals >= $ADV4_G_LC && player->$QPlasma >= $ADV4_G_QP) {
    $SAY_RESEARCH_CHRONOPORTING
    PERFORM $ACTION_RESEARCH_U4 0;
    if (perf_ret==0) { PERFORM SET_OBJECTIVE 0; }
    PERFORM NOTHING;
}
else {
  $SAY_RESOURCES
  PERFORM $ACTION_ERROR1; 
  PERFORM SET_OBJECTIVE 0;
  PERFORM NOTHING;
}


